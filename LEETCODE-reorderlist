   
        if not head:
            return None
        else:
            slow = fast = head
            while fast and fast.next:
                slow, fast = slow.next, fast.next.next
                
           
            lhead, rhead = head, self.reverse(slow.next)
            slow.next = None
            
           
            lcur, rcur = lhead, rhead
            while lcur and rcur:
                tmp, rcur = rcur, rcur.next
                tmp.next = lcur.next
                lcur.next, lcur = tmp, lcur.next

                    def reverse(self, head: ListNode):
                        if not head:
                            return None
                        else:
                            prev, cur = None, head
                            while cur:
                                cur.next, cur, prev = prev, cur.next, cur
                            return prev
